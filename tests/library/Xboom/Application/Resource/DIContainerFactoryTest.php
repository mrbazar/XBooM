<?php

/**
 *  CMF for web applications based on Zend Framework 1 and Doctrine 2
 *  Copyright (C) 2010  Eugene Gruzdev aka yugeon
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @copyright  Copyright (c) 2010 yugeon <yugeon.ru@gmail.com>
 * @license    http://www.gnu.org/licenses/gpl-3.0.html  GNU GPLv3
 */

class Xboom_Application_Resource_DIContainerFactoryTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var Xboom_Application_Resource_DIContainerFactory
     */
    protected $object;
    protected $options;

    protected function setUp()
    {
        parent::setUp();
        $config = new Zend_Config_Ini(
                        APPLICATION_PATH . '/configs/application.ini',
                        APPLICATION_ENV);
        $this->options = $config->toArray();
        $this->object = new Xboom\Application\Resource\DIContainerFactory(
                        $this->options['DIContainer']['params']);
    }

    protected function tearDown()
    {
        parent::tearDown();
        $file = $this->options['DIContainer']['params']['dumpFilePath'];
        if (file_exists($file))
        {
            unlink($file);
        }
    }

    public function testMakeContainer()
    {
        // example from
        // http://components.symfony-project.org/dependency-injection/trunk/book/04-Builder
        $this->object->setOptions(array('enableAutogenerateDumpFile' => '0'));
        $sc = $this->object->makeContainer();
        $sc->addParameters(array(
            'mailer.username' => 'foo',
            'mailer.password' => 'bar',
            'mailer.class' => 'Zend_Mail',
        ));
        $mailer = $sc->mailer;
        $mailerTransport = $mailer->getDefaultTransport();

        $this->assertType('sfServiceContainerInterface', $sc);
        $this->assertType('Zend_Mail', $mailer);
        $this->assertType('Zend_Mail_Transport_Smtp', $mailerTransport);
    }

    public function testMakeContainerAutogenerateDumpFile()
    {
        $filename = $this->options['DIContainer']['params']['dumpFilePath'];
        if (file_exists($filename))
        {
            unlink($filename);
        }

        $this->object->setOptions(array('enableAutogenerateDumpFile' => '1'));
        $sc = $this->object->makeContainer();
        $sc->addParameters(array(
            'mailer.username' => 'foo',
            'mailer.password' => 'bar',
            'mailer.class' => 'Zend_Mail',
        ));
        $mailer = $sc->mailer;
        $mailerTransport = $mailer->getDefaultTransport();

        $this->assertType('Zend_Mail', $mailer);
        $this->assertType('Zend_Mail_Transport_Smtp', $mailerTransport);

        $this->assertTrue(file_exists($filename));
    }

    public function testDIContainerAsNativeForZF()
    {
        $resourceName = 'TestResource';
        $resource = new Zend_Acl();

        $sc = $this->object->makeContainer();
        $sc->{$resourceName} = $resource;

        $this->assertType('Zend_Acl', $sc->{$resourceName});
    }
}